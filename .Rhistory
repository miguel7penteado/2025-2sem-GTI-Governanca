@startchen
entity LIVROS{ }
entity AUTORES{ }
entity EMPRESTIMOS{ }
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
entity LIVROS{ a }
entity AUTORES{ b}
entity EMPRESTIMOS{ c }
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
entity ALUNOS {
RA : STRING <<key>>
Nome: STRING
DataNascimento: DATE
Curso: STRING
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
entity LIVROS { }
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
entity LIVROS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
entity LIVROS {
}
entity AUTORES {
}
entity EMPRÉSTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
codigo <- '
@startchen
entity LIVROS {
}
entity AUTORES {
}
entity "EMPRÉSTIMOS" as EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
codigo <- '
@startchen
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
scale 1.5
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
scale 2.0
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
scale 10.0
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
scale 200*100
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
scale 500*100
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
scale 1000*100
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
scale 1000*100
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
scale 1000*100
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
scale 1000*100
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
scale 1000*100
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico)
codigo <- '
@startchen
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico, file = "./imagens/questao01.png")
codigo <- '
@startchen
scale 2
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico, file = "./imagens/questao01.png")
codigo <- '
@startchen
scale 5
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico, file = "./imagens/questao01.png")
codigo <- '
@startchen
scale 10
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico, file = "./imagens/questao01.png")
unlink("~/2025/2-semestre/Provas/2025/2-sem/GTI-BancoDados/NP1/Gabarito-GTI-BancoDeDados-NP1_cache", recursive = TRUE)
codigo <- '
@startchen
entity ALUNOS {
RA : STRING <<key>>
Nome: STRING
DataNascimento: DATE
Curso: STRING
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico, file = "./imagens/questao02.png")
unlink("~/2025/2-semestre/Provas/2025/2-sem/GTI-BancoDados/NP1/Gabarito-GTI-BancoDeDados-NP1_cache", recursive = TRUE)
View(grafico)
codigo <- '
@startchen
scale 10
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
#plot(grafico, file = "./imagens/questao01.png")
#knitr::include_graphics("./imagens/questao01.png")
knitr::include_graphics(grafico)
codigo <- '
@startchen
scale 10
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico, file = "./imagens/questao01.png")
knitr::include_graphics("./imagens/questao01.png")
codigo <- '
@startchen
scale 10
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
jpeg(file="./imagens/questao01.jpg")
plot(grafico, file = "./imagens/questao01.png")
dev.off()
knitr::include_graphics("./imagens/questao01.png")
codigo <- '
@startchen
scale 10
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
jpeg(file="./imagens/questao01.jpg")
plot(grafico, file = "./imagens/questao01.png")
dev.off()
knitr::include_graphics("./imagens/questao01.jpg")
codigo <- '
@startchen
scale 10
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
png(file="./imagens/questao01.png")
plot(grafico, file = "./imagens/questao01.png")
dev.off()
knitr::include_graphics("./imagens/questao01.png")
codigo <- '
@startchen
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
png(file="./imagens/questao01.png")
plot(grafico, file = "./imagens/questao01.png")
dev.off()
knitr::include_graphics("./imagens/questao01.png")
codigo <- '
@startchen
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico, file = "./imagens/questao01.png")
knitr::include_graphics("./imagens/questao01.png")
codigo <- '
@startchen
entity LIVROS {
}
entity AUTORES {
}
entity EMPRESTIMOS {
}
@endchen
'
grafico <- plantuml::plantuml(codigo)
plot(grafico, file = "./imagens/questao01.png")
knitr::include_graphics("./imagens/questao01.png")
knitr::opts_chunk$set(echo = FALSE)
library(plantuml)
# Configure o caminho para o JAR (igual ao Método 1)
plantumlOptions(jar_path = "C:/PROGRA~1/COMMON~1/Oracle/Java/libs/plantuml-1.2025.4.jar")
# Define um novo engine para knitr chamado "plantuml"
knitr::knit_engines$set(plantuml = function(options) {
# O código do chunk está em options$code
code <- paste(options$code, collapse = '\n')
# Gera um nome de arquivo único para a imagem
output_file <- paste0(knitr::opts_chunk$get("fig.path"), "uml-", options$label)
output_file_ext <- paste0(output_file, ".", options$format) # e.g., ".png"
# Usa a função plantuml para gerar a imagem
plantuml::plantuml(
code = code,
file = output_file,
format = options$format
)
# O Knitr espera que o engine retorne código para ser inserido no documento
# Aqui retornamos o comando Markdown para incluir a imagem gerada
knitr::knit_print(paste0("![](", output_file_ext, ")"))
})
knitr::opts_chunk$set(echo = TRUE)
library(plantuml)
# Configure o caminho para o JAR (igual ao Método 1)
plantumlOptions(jar_path = "C:/PROGRA~1/COMMON~1/Oracle/Java/libs/plantuml-1.2025.4.jar")
# Define um novo engine para knitr chamado "plantuml"
knitr::knit_engines$set(plantuml = function(options)
{
# O código do chunk está em options$code
code <- paste(options$code, collapse = '\n')
# Gera um nome de arquivo único para a imagem
output_file <- paste0(knitr::opts_chunk$get("fig.path"), "uml-", options$label)
output_file_ext <- paste0(output_file, ".", options$format) # e.g., ".png"
# Usa a função plantuml para gerar a imagem
plantuml::plantuml(
code = code,
file = output_file,
format = options$format
)
# O Knitr espera que o engine retorne código para ser inserido no documento
# Aqui retornamos o comando Markdown para incluir a imagem gerada
knitr::knit_print(paste0("![](", output_file_ext, ")"))
})
grafico[["code"]]
knitr::opts_chunk$set(echo = TRUE)
library(plantuml)
# Configure o caminho para o JAR (igual ao Método 1)
plantumlOptions(jar_path = "C:/PROGRA~1/COMMON~1/Oracle/Java/libs/plantuml-1.2025.4.jar")
# Define um novo engine para knitr chamado "plantuml"
knitr::knit_engines$set(plantuml = function(options)
{
# O código do chunk está em options$code
code <- paste(options$code, collapse = '\n')
# Gera um nome de arquivo único para a imagem
output_file <- paste0(knitr::opts_chunk$get("fig.path"), "uml-", options$label)
output_file_ext <- paste0(output_file, ".", options$format) # e.g., ".png"
# Usa a função plantuml para gerar a imagem
plantuml::plantuml(
code = code,
file = output_file,
format = options$format
)
# O Knitr espera que o engine retorne código para ser inserido no documento
# Aqui retornamos o comando Markdown para incluir a imagem gerada
knitr::knit_print(paste0("![](", output_file_ext, ")"))
})
plantuml_knit_engine()
knitr::opts_chunk$set(echo = TRUE)
library(plantuml)
# Configure o caminho para o JAR (igual ao Método 1)
plantumlOptions(jar_path = "C:/PROGRA~1/COMMON~1/Oracle/Java/libs/plantuml-1.2025.4.jar")
plantuml_knit_engine()
